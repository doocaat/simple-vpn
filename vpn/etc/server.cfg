#
# This is the shared-secret, which is the only mandatory configuration
# setting for the server.
#
# Clients will send their own shared-secret at the time they connect,
# and if this secret does not match the one configured on the server their
# connection will be dropped.
#
# Ideally this key will be long and complex.
#
key = Iequa[oogho5reiNgoo7ci4ruho~r#%fdsflj30-1l;alj1.>SDFÂ£LK!


##
## Optional settings now follow
##


##
## Change the name of our device
##
#
# device = svpn
#


##
## Change the subnet from which we allocate client IP addresses.
##
#
# subnet = 10.137.248.0/24
#
##
## IPv4 is more efficient (as the header size is smaller), and more
## common.  But IPv6 is the way of the future, so if you wish you can
## allow your connected clients to communicate over IPv6.
##
## NOTE: That our IPv6 implementation is naive, and ignores
##       router-advertisement, neighbour solications, etc.
##       IPv6 traffic is essentially broadcast to all peers.
##
## You'll need to pick a private IPv6 range, somewhere beneath the
## range fde4:8dba:82e1::/48, for example here we use the hungry-food
## range:
##
## subnet = fde4:8dba:82e1:f00d::/64
##


##
## Setup static-ips for particular clients, each client sends a name when
## connecting, and that name can be overridden via the client-configuration
## file.
##
## NOTE: These IPs must be within the subnet the server is using.
##
#
# host_deagol = 10.137.248.10
# host_deagol = fde4:8dba:82e1:f00d::10
#
# host_frodo  = 10.137.248.20
# host_deagol = fde4:8dba:82e1:f00d::20
#


##
## When a new client connects to the VPN server we can run a command, with
## details of that connection, stored in environmental variables:
##
##  $INTERNAL_IP -  e.g 10.0.0.2.
##  $EXTERNAL_IP -  e.g 100.200.300.200
##  $NAME        -  e.g. gold
##
#
# up = /etc/simple-vpn/blah.sh
#
